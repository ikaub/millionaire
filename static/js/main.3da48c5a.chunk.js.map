{"version":3,"sources":["components/Hamburger/Hamburger.tsx","config/game.config.ts","components/TileAnswer/TileAnswer.tsx","components/TileGain/TileGain.tsx","pages/Game/Game.tsx","components/Button/Button.tsx","assets/hand.svg","pages/Start/Start.tsx","App.tsx","index.tsx"],"names":["Hamburger","className","gameConfig","questions","body","answers","A","B","C","D","correctAnswers","gain","nextQuestionTimeout","TileAnswer","variant","answer","onSelect","useState","setClassName","height","viewBox","width","xmlns","onClick","setTimeout","includes","d","alignmentBaseline","dominantBaseline","x","y","TileGain","state","textAnchor","Game","currentQuestion","setCurrentQuestion","openPanel","setOpenPanel","history","useHistory","handleAnswer","selectedAnswer","length","push","pathname","togglePanel","Object","keys","map","key","index","Button","children","Start","useLocation","alt","src","hand","to","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3da48c5a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Hamburger: React.FC = () => {\n  return (\n    <div className=\"hamburger\">\n      <span className=\"hamburger__line\" />\n      <span className=\"hamburger__line\" />\n      <span className=\"hamburger__line\" />\n    </div>\n  );\n};\n","type Question = {\n  body: string;\n  answers: Record<string, string>;\n  correctAnswers: string[];\n};\n\ntype GameConfig = {\n  questions: Question[];\n  gain: string[];\n  nextQuestionTimeout: number;\n};\n\nexport const gameConfig: GameConfig = {\n  questions: [\n    {\n      body: 'Where is the city of Mykolaiv situated?',\n      answers: {\n        A: 'South',\n        B: 'North',\n        C: 'East',\n        D: 'West',\n      },\n      correctAnswers: ['A'],\n    },\n    {\n      body: 'When did Ukraine become independent?',\n      answers: {\n        A: '1947',\n        B: '1991',\n        C: '1994',\n        D: '2001',\n      },\n      correctAnswers: ['B'],\n    },\n    {\n      body: 'What is the capital of Ukraine?',\n      answers: {\n        A: 'Kharkiv',\n        B: 'Odessa',\n        C: 'Lviv',\n        D: 'Kyiv',\n      },\n      correctAnswers: ['D'],\n    },\n    {\n      body: 'How many regions are there in Ukraine? (incl. AR Crimea)',\n      answers: {\n        A: '24',\n        B: '25',\n        C: '22',\n        D: '27',\n      },\n      correctAnswers: ['B'],\n    },\n    {\n      body: 'When did Euromaidan took place?',\n      answers: {\n        A: '2013-2014',\n        B: '2012',\n        C: '2014-2015',\n        D: '2011-2012',\n      },\n      correctAnswers: ['A'],\n    },\n    {\n      body: 'When was Kyiv-Mohyla Academy founded?',\n      answers: {\n        A: '1991',\n        B: '1615',\n        C: '1845',\n        D: '1734',\n      },\n      correctAnswers: ['B'],\n    },\n    {\n      body: 'How many districts are there in Kyiv?',\n      answers: {\n        A: '12',\n        B: '23',\n        C: '10',\n        D: '6',\n      },\n      correctAnswers: ['C'],\n    },\n    {\n      body: 'When did WW2 start?',\n      answers: {\n        A: '1941',\n        B: '1940',\n        C: '1945',\n        D: '1939',\n      },\n      correctAnswers: ['D'],\n    },\n    {\n      body: 'What is the capital of Poland?',\n      answers: {\n        A: 'Krakow',\n        B: 'Lublin',\n        C: 'Warsaw',\n        D: 'Katowice',\n      },\n      correctAnswers: ['C'],\n    },\n    {\n      body: 'What does abbr. JS stand for?',\n      answers: {\n        A: 'JavaScript',\n        B: 'Java Spring',\n        C: 'JSON Standard',\n        D: 'Jeremy Soule',\n      },\n      correctAnswers: ['A'],\n    },\n    {\n      body: 'Popular book about hobbits adventures is called',\n      answers: {\n        A: 'Star Wars',\n        B: 'The Lord of the Rings',\n        C: 'WarCraft',\n        D: 'Harry Potter',\n      },\n      correctAnswers: ['B'],\n    },\n    {\n      body: 'The Big4 of thrash-metal are',\n      answers: {\n        A: 'Iron Maiden, Judas Priest, MotÃ¶rhead',\n        B: 'Pantera, Decapitated, Vader, Annihilator',\n        C: 'Metallica, Rammstein, Death, Obituary',\n        D: 'Metallica, Megadeth, Anthrax, Slayer',\n      },\n      correctAnswers: ['D'],\n    },\n  ],\n  gain: [\n    '$500',\n    '$1,000',\n    '$2,000',\n    '$4,000',\n    '$8,000',\n    '$16,000',\n    '$32,000',\n    '$64,000',\n    '$125,000',\n    '$250,000',\n    '$500,000',\n    '$1,000,000',\n  ],\n  nextQuestionTimeout: 1000,\n};\n","import React, { useState } from 'react';\n\nimport { gameConfig } from './../../config/game.config';\n\ntype TileAnswerProps = {\n  variant: string;\n  answer: string;\n  correctAnswers?: string[];\n  onSelect: (selectedAnswer: string) => void;\n};\n\nexport const TileAnswer: React.FC<TileAnswerProps> = ({\n  variant,\n  answer,\n  correctAnswers,\n  onSelect,\n}: TileAnswerProps) => {\n  const [className, setClassName] = useState('tile');\n\n  const handleSelect = () => {\n    setTimeout(() => {\n      setClassName(correctAnswers?.includes(variant) ? 'tile__correct' : 'tile__wrong');\n    }, gameConfig.nextQuestionTimeout);\n    setClassName('tile__selected');\n    onSelect(variant);\n  };\n\n  return (\n    <svg\n      className={className}\n      height=\"72\"\n      viewBox=\"0 0 421 72\"\n      width=\"421\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      onClick={handleSelect}\n    >\n      <path d=\"M404 36L421 36\" />\n      <path d=\"M0 36L17 36\" />\n      <path d=\"M39.8137 5.09773C41.9857 2.2033 45.3933 0.5 49.012 0.5H371.988C375.607 0.5 379.014 2.2033 381.186 5.09773L404.375 36L381.186 66.9023C379.014 69.7967 375.607 71.5 371.988 71.5H49.012C45.3933 71.5 41.9857 69.7967 39.8137 66.9023L16.6251 36L39.8137 5.09773Z\" />\n      <text alignmentBaseline=\"middle\" className=\"tile__text\" dominantBaseline=\"middle\" x=\"10%\" y=\"50%\">\n        <tspan className=\"tile__variant\">{variant}</tspan>\n        <tspan className=\"tile__answer\" x=\"15%\">\n          {answer}\n        </tspan>\n      </text>\n    </svg>\n  );\n};\n","import React from 'react';\n\ntype TileGainProps = {\n  state: 'previous' | 'active' | 'next';\n  gain: string;\n};\n\nexport const TileGain: React.FC<TileGainProps> = ({ state, gain }: TileGainProps) => {\n  return (\n    <svg className={`tile__${state}`} height=\"32\" viewBox=\"0 0 320 32\" width=\"320\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M41 16H0\" />\n      <path d=\"M320 16H279\" />\n      <path d=\"M53.5303 3.70404C55.6719 1.64809 58.5256 0.5 61.4944 0.5H258.506C261.474 0.5 264.328 1.64809 266.47 3.70404L279.278 16L266.47 28.296C264.328 30.3519 261.474 31.5 258.506 31.5H61.4944C58.5256 31.5 55.6719 30.3519 53.5303 28.296L40.722 16L53.5303 3.70404Z\" />\n      <text className=\"tile__gain__text\" dominantBaseline=\"middle\" textAnchor=\"middle\" x=\"50%\" y=\"50%\">\n        {gain}\n      </text>\n    </svg>\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Hamburger } from '../../components/Hamburger/Hamburger';\nimport { TileAnswer } from '../../components/TileAnswer/TileAnswer';\nimport { TileGain } from '../../components/TileGain/TileGain';\n\nimport { gameConfig } from './../../config/game.config';\n\nexport const Game: React.FC = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [openPanel, setOpenPanel] = useState(false);\n  const history = useHistory();\n\n  const handleAnswer = (selectedAnswer: string) => {\n    const { correctAnswers } = gameConfig.questions[currentQuestion];\n\n    setTimeout(() => {\n      if (correctAnswers.includes(selectedAnswer)) {\n        if (currentQuestion !== gameConfig.questions.length - 1) setCurrentQuestion(currentQuestion + 1);\n        else\n          history.push({\n            pathname: '/',\n            state: gameConfig.gain[currentQuestion],\n          });\n      } else\n        history.push({\n          pathname: '/',\n          state: currentQuestion === 0 ? '$0' : gameConfig.gain[currentQuestion - 1],\n        });\n    }, 2 * gameConfig.nextQuestionTimeout);\n  };\n\n  const togglePanel = () => {\n    setOpenPanel(!openPanel);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"game__mobile__nav\" onClick={togglePanel}>\n        <Hamburger />\n      </div>\n      <div className=\"game__questions\">\n        <span className=\"game__questions__body\">{gameConfig.questions[currentQuestion].body}</span>\n        <div className=\"game__questions__answers-box\">\n          {Object.keys(gameConfig.questions[currentQuestion].answers).map((key) => (\n            <div key={key + currentQuestion} className=\"game__questions__answer\">\n              <TileAnswer\n                answer={gameConfig.questions[currentQuestion].answers[key]}\n                correctAnswers={gameConfig.questions[currentQuestion].correctAnswers}\n                variant={key}\n                onSelect={handleAnswer}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className={`${openPanel ? 'game__mobile__open' : ''}`}>\n        <div className=\"game__gain\">\n          <span className=\"game__mobile__close\" onClick={togglePanel}>\n            &#10006;\n          </span>\n          {gameConfig.gain.map((gain, index) => (\n            <div key={gain}>\n              <TileGain\n                gain={gain}\n                state={currentQuestion === index ? 'active' : currentQuestion > index ? 'previous' : 'next'}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\n\r\ntype ButtonProps = {\r\n  children: string;\r\n  onClick?: () => void;\r\n};\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ children, onClick }: ButtonProps) => {\r\n  return (\r\n    <div className=\"btn\" onClick={onClick}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/hand.dbb74bc4.svg\";","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { Button } from '../../components/Button/Button';\n\nimport hand from './../../assets/hand.svg';\n\nexport const Start: React.FC = () => {\n  const { state }: { state: string | undefined } = useLocation();\n\n  return (\n    <div className={state ? 'end-game' : 'start-screen'}>\n      <img alt=\"Hand\" src={hand} />\n      <div>\n        {state && <span className=\"total-score\">Total score:</span>}\n        <span className=\"welcome-label\">{state ? `${state} earned` : 'Who wants to be a millionaire?'}</span>\n        <Link to=\"/game\">\n          <Button>{state ? 'Try again' : 'Start'}</Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Game } from './pages/Game/Game';\nimport { Start } from './pages/Start/Start';\n\nimport './styles/index.scss';\n\nconst App: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Start />\n      </Route>\n      <Route path=\"/game\" exact>\n        <Game />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}